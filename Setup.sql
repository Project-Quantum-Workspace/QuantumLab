DROP TABLE IF EXISTS User_Role;
DROP TABLE IF EXISTS User_Workspace;
DROP TABLE IF EXISTS Tokens;
DROP TABLE IF EXISTS Roles;
DROP TABLE IF EXISTS Users;
DROP TABLE IF EXISTS Workspaces;
DROP TABLE IF EXISTS Templates;

CREATE TABLE Users (
	id INT GENERATED ALWAYS AS IDENTITY,
	email VARCHAR(255) NOT NULL,
	password VARCHAR(255) NOT NULL,
	access_level INT NOT NULL,
	quantumlab_token VARCHAR(255),
	PRIMARY KEY(id)
);

CREATE TABLE Roles (
	id INT GENERATED ALWAYS AS IDENTITY,
	name VARCHAR(255) NOT NULL,
	PRIMARY KEY(id)
);

CREATE TABLE User_Role (
	user_id INT,
	role_id INT,
	PRIMARY KEY(user_id, role_id),
	FOREIGN KEY(user_id)
		REFERENCES Users(id)
		ON DELETE CASCADE,
	FOREIGN KEY(role_id)
		REFERENCES Roles(id)
		ON DELETE CASCADE
);

CREATE TABLE Tokens (
	id INT GENERATED ALWAYS AS IDENTITY,
	user_id INT NOT NULL,
	name VARCHAR(255) NOT NULL,
	value VARCHAR(255) NOT NULL,
	FOREIGN KEY(user_id)
		REFERENCES Users(id)
		ON DELETE CASCADE
);

CREATE TABLE Templates (
	id INT GENERATED ALWAYS AS IDENTITY,
	parameters VARCHAR(255) NOT NULL,
	access_level VARCHAR(255) NOT NULL,
	filename VARCHAR(255) NOT NULL,
	PRIMARY KEY(id)
);

CREATE TABLE Workspaces (
	id INT GENERATED ALWAYS AS IDENTITY,
	name VARCHAR(255) NOT NULL,
	type VARCHAR(255) NOT NULL,
	state VARCHAR(255) NOT NULL,
	description VARCHAR(255),
	created_at TIMESTAMP WITH TIME ZONE NOT NULL,
	last_accessed TIMESTAMP WITH TIME ZONE NOT NULL,
	tags VARCHAR(255),
	template_id INT NOT NULL,
	parameters VARCHAR(255) NOT NULL,
	PRIMARY KEY(id),
	FOREIGN KEY(template_id)
		REFERENCES Templates(id)
		ON DELETE CASCADE
);

CREATE TABLE User_Workspace (
	user_id INT,
	workspace_id INT,
	PRIMARY KEY(user_id, workspace_id),
	FOREIGN KEY(user_id)
		REFERENCES Users(id)
		ON DELETE CASCADE,
	FOREIGN KEY(workspace_id)
		REFERENCES Workspaces(id)
		ON DELETE CASCADE
);