# ------------------------------------------------------------------------
# Creates the examples database and respective user. This database location
# and access credentials are defined on the environment variables
# ------------------------------------------------------------------------
set -e

psql -v ON_ERROR_STOP=1 --username "${POSTGRES_USER}" <<-EOSQL
  CREATE USER ${EXAMPLES_USER} WITH PASSWORD '${EXAMPLES_PASSWORD}';
  CREATE DATABASE ${EXAMPLES_DB};
  GRANT ALL PRIVILEGES ON DATABASE ${EXAMPLES_DB} TO ${EXAMPLES_USER};
  CREATE USER ${QUANTUMLAB_USER} WITH PASSWORD '${QUANTUMLAB_PASSWORD}';
  CREATE DATABASE ${QUANTUMLAB_DB};
  CREATE DATABASE ${RESULT_DB};
  GRANT ALL PRIVILEGES ON DATABASE ${QUANTUMLAB_DB} TO ${QUANTUMLAB_USER};
  GRANT ALL PRIVILEGES ON DATABASE ${RESULT_DB} TO ${QUANTUMLAB_USER};
EOSQL

psql -v ON_ERROR_STOP=1 --username "${POSTGRES_USER}" -d "${EXAMPLES_DB}" <<-EOSQL
   GRANT ALL ON SCHEMA public TO ${EXAMPLES_USER};
EOSQL

psql -v ON_ERROR_STOP=1 --username "${POSTGRES_USER}" -d "${QUANTUMLAB_DB}" <<-EOSQL
   GRANT ALL ON SCHEMA public TO ${QUANTUMLAB_USER};
EOSQL

psql -v ON_ERROR_STOP=1 --username "${POSTGRES_USER}" -d "${RESULT_DB}" <<-EOSQL
   GRANT ALL ON SCHEMA public TO ${QUANTUMLAB_USER};
EOSQL

psql -v ON_ERROR_STOP=1 --username "${QUANTUMLAB_USER}" -d "${QUANTUMLAB_DB}" <<-EOSQL
   CREATE EXTENSION IF NOT EXISTS "uuid-ossp" WITH SCHEMA public;
   SET default_table_access_method = heap;
   CREATE TABLE public.roles (
       id integer NOT NULL,
       name character varying(255) NOT NULL
   );

   ALTER TABLE public.roles ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
       SEQUENCE NAME public.roles_id_seq
       START WITH 1
       INCREMENT BY 1
       NO MINVALUE
       NO MAXVALUE
       CACHE 1
   );

   CREATE TABLE public.templates (
       id integer NOT NULL,
       parameters text,
       access_level bigint,
       filename text,
       icon text,
       tf_file bytea
   );

   ALTER TABLE public.templates ALTER COLUMN id ADD GENERATED ALWAYS AS IDENTITY (
       SEQUENCE NAME public.templates_id_seq
       START WITH 1
       INCREMENT BY 1
       NO MINVALUE
       NO MAXVALUE
       CACHE 1
   );

   CREATE TABLE public.tokens (
       id integer NOT NULL,
       user_id integer NOT NULL,
       name character varying(255) NOT NULL,
       value character varying(255) NOT NULL
   );


   ALTER TABLE public.tokens ALTER COLUMN id ADD GENERATED ALWAYS AS IDENTITY (
       SEQUENCE NAME public.tokens_id_seq
       START WITH 1
       INCREMENT BY 1
       NO MINVALUE
       NO MAXVALUE
       CACHE 1
   );

   CREATE TABLE public.toolsets (
       id integer NOT NULL,
       workspace_id integer NOT NULL,
       name character varying(255),
       icon character varying(255),
       type character varying(255),
       access_type character varying(255),
       access_id character varying(255)
   );

   CREATE TABLE public.user_roles (
       user_id integer NOT NULL,
       role_id integer NOT NULL
   );

   CREATE TABLE public.user_workspaces (
       user_id integer NOT NULL,
       workspace_id integer NOT NULL
   );

   CREATE TABLE public.users (
       id integer NOT NULL,
       email character varying(255) NOT NULL,
       password character varying(255) NOT NULL,
       access_level integer NOT NULL,
       quantumlab_token character varying(255),
       uuid uuid DEFAULT public.uuid_generate_v4() NOT NULL,
       avatar character varying(4194304),
       last_name character varying,
       first_name character varying,
       account_status boolean DEFAULT true NOT NULL
   );

   ALTER TABLE public.users ALTER COLUMN id ADD GENERATED ALWAYS AS IDENTITY (
       SEQUENCE NAME public.users_id_seq
       START WITH 1
       INCREMENT BY 1
       NO MINVALUE
       NO MAXVALUE
       CACHE 1
   );

   CREATE TABLE public.workspaces (
       id integer NOT NULL,
       name character varying(255) NOT NULL,
       type character varying(255) NOT NULL,
       state character varying(255) NOT NULL,
       description character varying(255),
       created_at timestamp with time zone NOT NULL,
       last_accessed timestamp with time zone NOT NULL,
       tags character varying(255),
       template_id integer NOT NULL,
       parameters character varying(65535) NOT NULL,
       updated_at timestamp with time zone NOT NULL,
       uuid uuid DEFAULT public.uuid_generate_v4() NOT NULL
   );

   ALTER TABLE public.workspaces ALTER COLUMN id ADD GENERATED ALWAYS AS IDENTITY (
       SEQUENCE NAME public.workspaces_id_seq
       START WITH 1
       INCREMENT BY 1
       NO MINVALUE
       NO MAXVALUE
       CACHE 1
   );

   ALTER TABLE ONLY public.roles
       ADD CONSTRAINT roles_pkey PRIMARY KEY (id);

   ALTER TABLE ONLY public.templates
       ADD CONSTRAINT templates_pkey PRIMARY KEY (id);

   ALTER TABLE ONLY public.toolsets
       ADD CONSTRAINT toolsets_pkey PRIMARY KEY (id);

   ALTER TABLE ONLY public.user_roles
       ADD CONSTRAINT user_role_pkey PRIMARY KEY (user_id, role_id);

   ALTER TABLE ONLY public.user_workspaces
       ADD CONSTRAINT user_workspace_pkey PRIMARY KEY (user_id, workspace_id);

   ALTER TABLE ONLY public.users
       ADD CONSTRAINT users_email UNIQUE (email);

   ALTER TABLE ONLY public.users
       ADD CONSTRAINT users_pkey PRIMARY KEY (id);

   ALTER TABLE ONLY public.users
       ADD CONSTRAINT users_uuid UNIQUE (uuid);

   ALTER TABLE ONLY public.workspaces
       ADD CONSTRAINT workspaces_pkey PRIMARY KEY (id);

   ALTER TABLE ONLY public.workspaces
       ADD CONSTRAINT workspaces_uuid UNIQUE (uuid);

   ALTER TABLE ONLY public.tokens
       ADD CONSTRAINT tokens_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.users(id) ON DELETE CASCADE;

   ALTER TABLE ONLY public.toolsets
       ADD CONSTRAINT toolsets_workspace_id_fkey FOREIGN KEY (workspace_id) REFERENCES public.workspaces(id);

   ALTER TABLE ONLY public.user_roles
       ADD CONSTRAINT user_role_role_id_fkey FOREIGN KEY (role_id) REFERENCES public.roles(id) ON DELETE CASCADE;

   ALTER TABLE ONLY public.user_roles
       ADD CONSTRAINT user_role_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.users(id) ON DELETE CASCADE;

   ALTER TABLE ONLY public.user_workspaces
       ADD CONSTRAINT user_workspace_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.users(id) ON DELETE CASCADE;

   ALTER TABLE ONLY public.user_workspaces
       ADD CONSTRAINT user_workspace_workspace_id_fkey FOREIGN KEY (workspace_id) REFERENCES public.workspaces(id) ON DELETE CASCADE;

   ALTER TABLE ONLY public.workspaces
       ADD CONSTRAINT workspaces_template_id_fkey FOREIGN KEY (template_id) REFERENCES public.templates(id);

EOSQL

psql -v ON_ERROR_STOP=1 --username "${QUANTUMLAB_USER}" -d "${RESULT_DB}" <<-EOSQL

CREATE TABLE public.results (
    id uuid NOT NULL,
    workspace_id integer NOT NULL,
    result_data character varying(1000)
);

ALTER TABLE ONLY public.results
    ADD CONSTRAINT result_pkey PRIMARY KEY (id);

EOSQL