basePath: /api
definitions:
  model.CreateWorkspaceRequest:
    properties:
      user_id:
        type: integer
      workspace:
        $ref: '#/definitions/model.Workspace'
    type: object
  model.ErrorResponse:
    properties:
      message:
        type: string
    type: object
  model.LoginRequest:
    properties:
      email:
        type: string
      password:
        type: string
    required:
    - email
    - password
    type: object
  model.LoginResponse:
    properties:
      accessToken:
        type: string
      refreshToken:
        type: string
      status:
        type: string
    type: object
  model.SuccessResponse:
    properties:
      message:
        type: string
    type: object
  model.Workspace:
    properties:
      created_at:
        type: string
      description:
        type: string
      id:
        type: integer
      last_accessed:
        type: string
      name:
        type: string
      parameters:
        type: string
      state:
        type: string
      tags:
        type: string
      template_id:
        type: integer
      type:
        type: string
      updated_at:
        type: string
    type: object
info:
  contact:
    email: quanchic@student.unimelb.edu.au
    name: Quanchi Chen
  description: A web service API in Go using the Gin framework
  title: QuantumLab Gin Web Service
  version: "1.0"
paths:
  /login:
    post:
      consumes:
      - application/json
      description: Log a user in if the provided email and password are correct.
      parameters:
      - description: login credential
        in: body
        name: credential
        required: true
        schema:
          $ref: '#/definitions/model.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.LoginResponse'
        "400":
          description: Bad Request (Invalid Email)
          schema:
            $ref: '#/definitions/model.ErrorResponse'
        "401":
          description: Incorrect Password
          schema:
            $ref: '#/definitions/model.ErrorResponse'
        "404":
          description: Email Not Found
          schema:
            $ref: '#/definitions/model.ErrorResponse'
        "500":
          description: Error Creating Access/Refresh Token
          schema:
            $ref: '#/definitions/model.ErrorResponse'
      summary: Log a user in
  /workspaces:
    patch:
      consumes:
      - application/json
      description: Update specific fields of a workspace.
      parameters:
      - description: Updated workspace metadata
        in: body
        name: workspace
        required: true
        schema:
          $ref: '#/definitions/model.Workspace'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.SuccessResponse'
        "400":
          description: JSON Parse Error
          schema:
            $ref: '#/definitions/model.ErrorResponse'
        "500":
          description: Database Query Error
          schema:
            $ref: '#/definitions/model.ErrorResponse'
      summary: Update workspace
    post:
      consumes:
      - application/json
      description: Create a workspace.
      parameters:
      - description: Workspace create request with workspace metadata and userID
        in: body
        name: workspace
        required: true
        schema:
          $ref: '#/definitions/model.CreateWorkspaceRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.SuccessResponse'
        "400":
          description: JSON Parse Error
          schema:
            $ref: '#/definitions/model.ErrorResponse'
        "500":
          description: Database Query Error
          schema:
            $ref: '#/definitions/model.ErrorResponse'
      summary: Create workspace
  /workspaces/:id:
    delete:
      description: Delete a workspace by its ID.
      parameters:
      - description: Workspace ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.SuccessResponse'
        "400":
          description: Illegal Workspace ID
          schema:
            $ref: '#/definitions/model.ErrorResponse'
        "500":
          description: Database Query Error
          schema:
            $ref: '#/definitions/model.ErrorResponse'
      summary: Delete workspace
    get:
      description: Get a workspace by its ID.
      parameters:
      - description: Workspace ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Workspace'
        "400":
          description: Illegal Workspace ID
          schema:
            $ref: '#/definitions/model.ErrorResponse'
        "500":
          description: Workspace Not Found
          schema:
            $ref: '#/definitions/model.ErrorResponse'
      summary: Get workspace by ID
  /workspaces/users/:id:
    get:
      description: Get all workspaces of a user. An empty array is returned if the
        user has no workspace.
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.Workspace'
            type: array
        "400":
          description: Illegal User ID
          schema:
            $ref: '#/definitions/model.ErrorResponse'
        "500":
          description: Database Query Error
          schema:
            $ref: '#/definitions/model.ErrorResponse'
      summary: Get all workspaces by user
swagger: "2.0"
